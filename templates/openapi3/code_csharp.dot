//includes
using System;
using System.Net.Http;
using System.Text;
using System.Net.Http.Headers;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;

//url contains paramaters since we are sending the body content in POST call
string url = "https://proview-demo.caqh.org/RosterAPI/api/Roster?{{~ data.requiredParameters :p:index}}{{=p.name}}={{=p.exampleValues.json.replace(/'/g,"")}}{{? index != data.requiredParameters.length-1}}&{{?}}{{~}}";

//HTTPClient should be instantiated once and re-used in your application
HttpClient client = new HttpClient()

//set up HTTP auth (replace username/password with yours)
var byteArray = Encoding.ASCII.GetBytes("username:password");
client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Basic", Convert.ToBase64String(byteArray));
//Build POST body (you can also load in external json files as a string, this is to build one on the fly)
JObject body = new JObject(
new JProperty("provider", new JObject(
    new JProperty("first_name", ""),
    new JProperty("middle_name", ""),
    new JProperty("last_name", ""),
    new JProperty("name_suffix", ""),
    new JProperty("gender", ""),
    new JProperty("address1", ""),
    new JProperty("address2", ""),
    new JProperty("city", ""),
    new JProperty("state", ""),
    new JProperty("zip", ""),
    new JProperty("zip_extn", ""),
    new JProperty("phone", ""),
    new JProperty("fax", ""),
    new JProperty("email", ""),
    new JProperty("practice_state", ""),
    new JProperty("birthdate", ""),
    new JProperty("ssn", ""),
    new JProperty("short_ssn", ""),
    new JProperty("dea", ""),
    new JProperty("upin", ""),
    new JProperty("type", ""),
    new JProperty("tax_id", ""),
    new JProperty("npi", ""),
    new JProperty("license_state", ""),
    new JProperty("license_number", ""))),
new JProperty("caqh_provider_id", ""),
new JProperty("po_provider_id", ""),
new JProperty("last_recredential_date", ""),
new JProperty("next_recredential_date", ""),
new JProperty("delegation_flag", ""),
new JProperty("application_type", ""),
new JProperty("affiliation_flag", ""),
new JProperty("organization_id", ""),
new JProperty("region_id", ""));
//Body is taken as an array, even with only one element
JArray bodyArray = new JArray(body);
var content = new StringContent(bodyArray.ToString(), Encoding.UTF8, "application/json");
content.Headers.ContentType = new MediaTypeHeaderValue("application/json");

{{ data.methodCamel = data.method.verb.charAt(0).toUpperCase() + data.method.verb.slice(1); }}

//Send the POST Request
var result = client.{{=data.methodCamel}}Async(url, content).Result;
//get the response message and parse it
string resultTxt = result.Content.ReadAsStringAsync().Result;
dynamic obj = JsonConvert.DeserializeObject<dynamic>(resultTxt);
Console.WriteLine(obj.batch_Id);
